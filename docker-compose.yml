version: '3.8'

services:
  db:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_USER=postgres
      - POSTGRES_DB=api-db
    ports:
      - 5432:5432
    volumes:
      - postgresdb:/data/db
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d api-db']
      interval: 1s
      timeout: 5s
      retries: 20
    networks:
      - localnetwork

  pgadmin4:
    ports:
      - '5050:80'

    environment:
      - PGADMIN_DEFAULT_EMAIL=local@rocket.fr
      - PGADMIN_DEFAULT_PASSWORD=password
    container_name: pgadmin4
    image: dpage/pgadmin4
    depends_on:
      db:
        condition: service_healthy

  api:
    container_name: api
    env_file:
      - .env
    environment:
      - DATABASE_URL=${POSTGRES_URL}
    build:
      context: ./apps/api/
      dockerfile: Dockerfile
    command: npm run dev:api
    restart: 'no'
    ports:
      - 3333:3333
    entrypoint: ['./entrypoint.sh', 'DEV']
    depends_on:
      db:
        condition: service_healthy
    networks:
      - localnetwork

networks:
  localnetwork:
    driver: bridge

volumes:
  postgresdb:
